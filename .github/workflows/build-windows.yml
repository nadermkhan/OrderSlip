# .github/workflows/build-windows.yml
name: Build Windows x64

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.0'  # Latest stable Qt version
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        dir: '${{ github.workspace }}/qt'
        modules: 'qt5compat qtcharts'
        cache: true
        cache-key-prefix: 'qt-cache'

    - name: Set up MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Configure Project
      run: |
        mkdir build
        cd build
        cmake .. -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="${{ env.Qt6_Dir }}"

    - name: Build Project
      run: |
        cd build
        cmake --build . --config Release

    - name: Deploy Qt Libraries
      run: |
        cd build
        windeployqt --release --compiler-runtime ProjectTracker.exe

    - name: Create Release Package
      run: |
        cd build
        7z a ProjectTracker-Windows-x64.zip *.exe *.dll platforms/ styles/ sqldrivers/ projects.db

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ProjectTracker-Windows-x64
        path: build/ProjectTracker-Windows-x64.zip

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: build/ProjectTracker-Windows-x64.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
